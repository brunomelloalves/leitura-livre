// <auto-generated />
using System;
using LeituraLivre.Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LeituraLivre.Infra.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250413152209_AdicaoDeAprovadoTabelaUsuario")]
    partial class AdicaoDeAprovadoTabelaUsuario
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LeituraLivre.Domain.Entities.Arquivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Conteudo")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("TipoMime")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Arquivos", (string)null);
                });

            modelBuilder.Entity("LeituraLivre.Domain.Entities.AvaliacaoEmprestimo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Classificacao")
                        .HasColumnType("integer");

                    b.Property<string>("Comentario")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<int>("EmprestimoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmprestimoId");

                    b.ToTable("AvaliacoesEmprestimo", (string)null);
                });

            modelBuilder.Entity("LeituraLivre.Domain.Entities.AvaliacaoLivro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Classificacao")
                        .HasColumnType("integer");

                    b.Property<string>("Comentario")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<int>("LivroId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LivroId");

                    b.ToTable("AvaliacoesLivro", (string)null);
                });

            modelBuilder.Entity("LeituraLivre.Domain.Entities.Emprestimo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataDevolucaoPrevista")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataDevolucaoRealizada")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataEmprestimo")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("LivroId")
                        .HasColumnType("integer");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LivroId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Emprestimos", (string)null);
                });

            modelBuilder.Entity("LeituraLivre.Domain.Entities.Livro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AnoPublicacao")
                        .HasColumnType("integer");

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)");

                    b.Property<int?>("CapaId")
                        .HasColumnType("integer");

                    b.Property<string>("Categoria")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<bool>("Disponivel")
                        .HasColumnType("boolean");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("CapaId")
                        .IsUnique();

                    b.ToTable("Livros", (string)null);
                });

            modelBuilder.Entity("LeituraLivre.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aprovado")
                        .HasColumnType("boolean");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("Nome")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<int>("NrImovel")
                        .HasColumnType("integer");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Telefone")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("LeituraLivre.Domain.Entities.AvaliacaoEmprestimo", b =>
                {
                    b.HasOne("LeituraLivre.Domain.Entities.Emprestimo", "Emprestimo")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("EmprestimoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Emprestimo");
                });

            modelBuilder.Entity("LeituraLivre.Domain.Entities.AvaliacaoLivro", b =>
                {
                    b.HasOne("LeituraLivre.Domain.Entities.Livro", "Livro")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("LivroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Livro");
                });

            modelBuilder.Entity("LeituraLivre.Domain.Entities.Emprestimo", b =>
                {
                    b.HasOne("LeituraLivre.Domain.Entities.Livro", "Livro")
                        .WithMany()
                        .HasForeignKey("LivroId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LeituraLivre.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Emprestimos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Livro");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("LeituraLivre.Domain.Entities.Livro", b =>
                {
                    b.HasOne("LeituraLivre.Domain.Entities.Arquivo", "Capa")
                        .WithOne("Livro")
                        .HasForeignKey("LeituraLivre.Domain.Entities.Livro", "CapaId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Capa");
                });

            modelBuilder.Entity("LeituraLivre.Domain.Entities.Arquivo", b =>
                {
                    b.Navigation("Livro");
                });

            modelBuilder.Entity("LeituraLivre.Domain.Entities.Emprestimo", b =>
                {
                    b.Navigation("Avaliacoes");
                });

            modelBuilder.Entity("LeituraLivre.Domain.Entities.Livro", b =>
                {
                    b.Navigation("Avaliacoes");
                });

            modelBuilder.Entity("LeituraLivre.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("Emprestimos");
                });
#pragma warning restore 612, 618
        }
    }
}
